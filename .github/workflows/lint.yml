name: Run Unit Test via Pytest

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write
        contents: write
        checks: write
    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup PDM
        uses: pdm-project/setup-pdm@b2472ca4258a9ea3aee813980a0100a2261a42fc # v4
      - name: Install dependencies
        run: pdm install
      - name: Lint with black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
      - name: Test with pytest
        run: |
          pdm run pytest --junit-xml=test-results.xml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2
        if: always()
        with:
          files: |
            test-results.xml
      - name: Test with coverage
        run: |
          pdm run coverage run -m pytest -v -s
      - name: Generate Coverage Report
        run: |
          pdm run coverage report -m
      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@fb02115d6115e7b3325dc3295fe1dcfb1919248a # v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
